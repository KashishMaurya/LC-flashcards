
# 💡 LeetCode Flashcards - Your Coding Interview Prep Companion

A simple yet powerful flashcard app built in Python to help you practice and master LeetCode-style coding problems using a **spaced repetition** approach. Ideal for coding interviews, daily practice, or building muscle memory around common problem patterns.

---

## 🚀 Features

- ✅ **LeetCode-style flashcards**: Each card contains a full problem description, sample input/output, constraints, and detailed hints.
- 🔁 **Spaced repetition**: Unsolved problems appear more frequently; solved ones appear less often.
- 📊 **Progress tracking**: Automatically logs daily stats (solved/unsolved) to a CSV file.
- ✍️ **Customizable**: Easily edit the JSON file to add your own problems or topics.
- 🖼️ **User-friendly GUI**: Built with Tkinter. Click to flip cards and view solutions.

---

## 🧰 Getting Started

### ✅ Prerequisites

- Python 3.7+
- Libraries:
  - `tkinter` (usually pre-installed)
  - `pandas`

### 📦 Setup

Install required library:

```bash
pip install pandas
```

1. Clone or download this repository.
2. Ensure the file `lc_flashcards.json` is present. This contains your flashcard data.
3. Run the app:

```bash
python flashcards_app.py
```

---

## 🕹️ How to Use

The app displays one flashcard at a time:

- **Front**: title, description, example, constraints.
- **Back**: solution hints, difficulty, topics, and LeetCode number.

Click **"Show Solution"** to flip the card.

Click:

- ✅ **Solved (Yes)** → appears less often in future.
- ❌ **Unsolved (No)** → appears more frequently.

Your progress is saved daily in `lc_stats.csv`.

---

## 🛠️ Customizing Your Flashcards

### ✏️ Add or Edit Problems

Open the file `lc_flashcards.json` and use the format below:

```json
{
  "title": "Problem Title",
  "description": "Full problem description.",
  "example": "Input and output example.",
  "constraints": ["Constraint 1", "Constraint 2"],
  "solution": "Brief explanation or steps to solve.",
  "lc_number": "1",
  "level": "Easy",
  "topics": ["Array", "Hash Map"],
  "hints": ["Use a dictionary", "Think about complements"]
}
```

Add as many problems as you'd like to grow your personal problem set!

---

### 🎚️ Adjust Repetition Frequency

In the Python script, modify these values to control how often a card repeats:

```python
NO_WEIGHT = 5    # For unsolved problems
YES_WEIGHT = 2   # For solved problems
```

---

### 🎨 Customize UI

Edit the Tkinter GUI section to change:

- Fonts, sizes, padding
- Colors (background, buttons)
- Window size and layout

---

## ⚙️ How It Works

### On Startup:

- Loads problems from `lc_flashcards.json`.
- Applies weighting based on prior performance.
- Loads progress stats from `lc_stats.csv` or starts fresh.

### During Use:

- Cards are shown in a randomized, weighted order.
- Clicking **Yes/No** adjusts future appearances of the card.
- Daily progress is saved automatically.
- Each day starts a new stats entry for fresh tracking.

---

## 💡 Tips for Best Use

- Be honest when marking cards "Solved" or "Unsolved".
- Make it a daily habit — consistency boosts retention.
- Study topics you're weak in by reviewing hints and solutions.
- Add problems you encounter in practice, contests, or interviews.

---

## 🤝 Contributing

This is an open-source project inspired by the need for effective LeetCode practice.  
Feel free to fork, improve, and share!

---

## 📄 License

MIT License. Use freely for personal or professional learning.
